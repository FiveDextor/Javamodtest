# .github/workflows/build.yml
name: Build Mod # Your workflow name

on: [push, pull_request] # Triggers on pushes and pull requests

jobs:
  buildJar: # Your job name
    runs-on: ubuntu-latest # Use a Linux environment for the build

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4 # Recommended: Use the latest stable version for checkout

    - name: Set up JDK 17
      uses: actions/setup-java@v4 # IMPORTANT: Updated to v4 for better reliability
      with:
        java-version: '17' # Mindustry typically requires JDK 17
        distribution: 'temurin' # A common OpenJDK distribution (e.g., Eclipse Temurin)
        cache: 'gradle' # Cache Gradle dependencies to speed up subsequent builds

    - name: Install Android SDK # Essential for './gradlew deploy' for cross-platform builds
      run: |
        # Define the SDK root directory
        SDK_ROOT="${{ runner.temp }}/android-sdk"
        # Define the actual path where the command-line tools will be unzipped
        CMDLINE_TOOLS_PATH="${SDK_ROOT}/cmdline-tools"
        
        # Create the necessary root directory for the SDK
        mkdir -p "${SDK_ROOT}"

        # Download the Android command-line tools zip
        # -q for quiet mode (no progress bar)
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8583979_latest.zip -O android-cmdline-tools.zip
        
        # Unzip the command-line tools directly into the SDK_ROOT.
        # This will create a 'cmdline-tools' folder inside SDK_ROOT.
        unzip -q android-cmdline-tools.zip -d "${SDK_ROOT}"
        
        # Add the sdkmanager's binary path to the current shell's PATH
        # This ensures 'sdkmanager' command is found immediately within this step.
        export PATH="${CMDLINE_TOOLS_PATH}/bin:${PATH}"
        
        # Set ANDROID_HOME environment variable for all subsequent steps in this job
        echo "ANDROID_HOME=${SDK_ROOT}" >> $GITHUB_ENV
        
        # Accept Android SDK licenses automatically (required for sdkmanager to install packages)
        # 'yes |' pipes 'y' to sdkmanager's license prompts to accept them without manual intervention.
        sdkmanager --licenses

        # Install specific Android platform and build-tools packages
        # android-33 and build-tools;33.0.0 are common versions. You can adjust these if your project
        # or Mindustry version specifically requires a different API level (e.g., android-34).
        sdkmanager "platforms;android-33" "build-tools;33.0.0"

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew # Make the Gradle wrapper script executable

    - name: Build mod jar (Desktop & Android)
      # This command builds a JAR compatible with both desktop and Android, using Gradle.
      run: ./gradlew deploy

    - name: Upload built jar file
      uses: actions/upload-artifact@v4 # Recommended: Use the latest stable version for uploading artifacts
      with:
        name: ${{ github.event.repository.name }} # The name of the artifact (will be a .zip file on GitHub)
        path: build/libs/${{ github.event.repository.name }}.jar # The path to your compiled .jar file
        # Adjust this path if your build.gradle outputs the JAR with a different name
        # (e.g., 'yourmodname-dex.jar' or 'yourmodname-android.jar').
        # The 'deploy' task typically names the output JAR after your mod's repository name.
